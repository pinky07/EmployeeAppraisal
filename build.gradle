buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.6.RELEASE'
    id 'org.detoeuf.swagger-codegen' version '1.7.1'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'docker'

swagger {
    inputSpec = "${project.projectDir}/src/main/resources/swagger/employeeAppraisals-api.yml"
    outputDir = "${project.projectDir}/src/main/swagger"
    addDynamicProperty 'sourceFolder', 'generated'
    lang = 'spring'
    additionalProperties = [
            'invokerPackage': 'com.gft.swagger.employees.invoker',
            'modelPackage'  : 'com.gft.swagger.employees.model',
            'apiPackage'    : 'com.gft.swagger.employees.api',
            'dateLibrary'   : 'java8',
            'interfaceOnly' : true
    ]
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDir file("${project.projectDir}/src/main/swagger/generated")
        }
    }
}

group = 'com.gft'
version = '0.0.1-SNAPSHOT'
description = 'GFT-EmployeeAppraisal'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Dalston.SR2'
    hibernateVersion = '5.2.10.Final'
}

dependencies {

    // Web
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')

    // Security
    compile('org.springframework.boot:spring-boot-starter-security')

    // OAuth2 + JWT
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.security:spring-security-jwt')

    // Eureka
    compile('org.springframework.cloud:spring-cloud-starter-eureka')

    // Database
    compile('org.springframework.boot:spring-boot-starter-data-jpa') {
        // Hibernate 5.0.12 does not support java.time properly.
        exclude group: 'org.hibernate'
    }
    compile("org.hibernate:hibernate-core:${hibernateVersion}")
    compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    compile('org.flywaydb:flyway-core:4.2.0')

    compile('com.h2database:h2') // Local development
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.3' // CI DEV database

    // Swagger
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')

    //Orika
    compile('ma.glasnost.orika:orika-core:1.5.1')

    // Test
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.mockito:mockito-core:2.+')
    testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// The purpose of this is that every time that the code compiles, it will generate the Swagger auto generated classes,
// preventing anyone from working directly on them.
//
tasks.compileJava.dependsOn 'swagger'

task buildDocker(type: Docker, dependsOn: build) {
    tag = "com.gft.employee-appraisal"
    tagVersion = 'latest'
    baseImage = 'java:8'
    push = false // Would push to a Docker Hub account
    applicationName = jar.baseName
    addFile {
        from jar
        rename { 'app.jar' }
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
}